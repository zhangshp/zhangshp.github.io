<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Server on zhangsp&#39;s blog</title>
    <link>https://zhangshp.github.io/categories/server/</link>
    <description>Recent content in Server on zhangsp&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 May 2018 09:10:11 +0800</lastBuildDate>
    
	<atom:link href="https://zhangshp.github.io/categories/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Certbot免费获取HTTPS证书</title>
      <link>https://zhangshp.github.io/certbot%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96https%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Fri, 04 May 2018 09:10:11 +0800</pubDate>
      
      <guid>https://zhangshp.github.io/certbot%E5%85%8D%E8%B4%B9%E8%8E%B7%E5%8F%96https%E8%AF%81%E4%B9%A6/</guid>
      <description>Let&amp;rsquo;s Encrypt与Certbot介绍 Let&amp;rsquo;s Encrypt是一个公共且免费SSL的项目，由Mozilla、Cisco、Akamai、IdenTrust、EFF等组织人员发起，主要的目的是为了推进网站从HTTP向HTTPS过度的进程，目前已经有越来越多的商家加入和赞助支持。
Certbot是一款易用的自动获取和部署SSL/TLS证书的工具。Certbot由EFF开发，被称为 Let’s Encrypt 官方客户端。我们获取免费证书的工具就是Certbot。
安装Certbot 推荐上Certbot 官网安装，如果没有找到相对应的操作系统和服务器软件则执行下面命令安装：
wget https://dl.eff.org/certbot-auto chmod a+x certbot-auto Ubuntu 16及更高版本如果出现setuptools pkg_resources pip wheel failed with error code 1 错误，请执行以下命令：
sudo apt-get install letsencrypt export LC_ALL=&amp;#34;en_US.UTF-8&amp;#34; export LC_CTYPE=&amp;#34;en_US.UTF-8&amp;#34; Certbot两种模式以及证书配置 Certbot三种模式以及证书配置 2018-05-15更新  Webroot  如果我们有权限修改服务器上的文件，并且不希望在证书获取过程中停止服务器的话可以使用Webroot模式。
certbot certonly --webroot -w /var/www/example -d www.example.com --webroot 指定Webroot模式
-w 指定网站根目录(webroot-path)
-d 指定域名
Webroot模式在网站根目录下创建临时文件({webroot-path}/.well-known/acme-challenge)，然后Let’s Encrypt 通过发送HTTP请求去验证域名和服务器是否属于你。为了能通过验证，我们必须配置服务器以便能访问到隐藏的目录(.well-known/acme-challenge)。下面是nginx的配置的例子：
location /.well-known/acme-challenge { default_type &amp;#34;text/plain&amp;#34;; root /var/www/example/; } 其实 -w 可以为任意目录，但是必须保证Let’s Encrypt 通过发送HTTP请求去验证的时候能访问到该目录。</description>
    </item>
    
  </channel>
</rss>